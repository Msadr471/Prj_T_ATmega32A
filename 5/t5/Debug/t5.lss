
t5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000892  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000892  00000926  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001c  00800070  00800070  00000936  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000936  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000994  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  000009d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dcd  00000000  00000000  00000a80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000072e  00000000  00000000  0000184d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000066c  00000000  00000000  00001f7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  000025e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000438  00000000  00000000  000027d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007c8  00000000  00000000  00002c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000033d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 04 01 	jmp	0x208	; 0x208 <__vector_1>
   8:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e9       	ldi	r30, 0x92	; 146
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 38       	cpi	r26, 0x8C	; 140
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1b 01 	call	0x236	; 0x236 <main>
  8a:	0c 94 47 04 	jmp	0x88e	; 0x88e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCD_CmdWrite>:
 * Return value : none
 *
 */
void LCD_GoToLineTwo ( )
	{
		LCD_CmdWrite ( LineTwo ) ;	// Move the Cursor to Second line First Position
  92:	88 bb       	out	0x18, r24	; 24
  94:	8b b3       	in	r24, 0x1b	; 27
  96:	8e 7f       	andi	r24, 0xFE	; 254
  98:	8b bb       	out	0x1b, r24	; 27
  9a:	8b b3       	in	r24, 0x1b	; 27
  9c:	8d 7f       	andi	r24, 0xFD	; 253
  9e:	8b bb       	out	0x1b, r24	; 27
  a0:	8b b3       	in	r24, 0x1b	; 27
  a2:	84 60       	ori	r24, 0x04	; 4
  a4:	8b bb       	out	0x1b, r24	; 27
  a6:	00 00       	nop
  a8:	8b b3       	in	r24, 0x1b	; 27
  aa:	8b 7f       	andi	r24, 0xFB	; 251
  ac:	8b bb       	out	0x1b, r24	; 27
  ae:	89 ef       	ldi	r24, 0xF9	; 249
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <LCD_CmdWrite+0x20>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <LCD_CmdWrite+0x26>
  b8:	00 00       	nop
  ba:	08 95       	ret

000000bc <LCD_Init>:
  bc:	83 ed       	ldi	r24, 0xD3	; 211
  be:	90 e3       	ldi	r25, 0x30	; 48
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <LCD_Init+0x4>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <LCD_Init+0xa>
  c6:	00 00       	nop
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	87 bb       	out	0x17, r24	; 23
  cc:	8a bb       	out	0x1a, r24	; 26
  ce:	88 e3       	ldi	r24, 0x38	; 56
  d0:	0e 94 49 00 	call	0x92	; 0x92 <LCD_CmdWrite>
  d4:	8e e0       	ldi	r24, 0x0E	; 14
  d6:	0e 94 49 00 	call	0x92	; 0x92 <LCD_CmdWrite>
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	0e 94 49 00 	call	0x92	; 0x92 <LCD_CmdWrite>
  e0:	80 e8       	ldi	r24, 0x80	; 128
  e2:	0e 94 49 00 	call	0x92	; 0x92 <LCD_CmdWrite>
  e6:	08 95       	ret

000000e8 <LCD_GoToXY>:
 */
void LCD_GoToXY ( char row , char col )
	{
		char pos ;

		if ( row < LCDMaxLines )
  e8:	82 30       	cpi	r24, 0x02	; 2
  ea:	50 f4       	brcc	.+20     	; 0x100 <LCD_GoToXY+0x18>
			{
				pos = LineOne | ( row << 6 ) ; // take the line number
  ec:	20 e4       	ldi	r18, 0x40	; 64
  ee:	82 9f       	mul	r24, r18
  f0:	c0 01       	movw	r24, r0
  f2:	11 24       	eor	r1, r1
  f4:	80 68       	ori	r24, 0x80	; 128
				//row0->pos=0x80  row1->pos=0xc0

				if ( col < LCDMaxChars )
  f6:	60 31       	cpi	r22, 0x10	; 16
  f8:	08 f4       	brcc	.+2      	; 0xfc <LCD_GoToXY+0x14>
				pos = pos + col ;            //take the char number
  fa:	86 0f       	add	r24, r22
				//now pos points to the given XY pos

				LCD_CmdWrite ( pos ) ;	       // Move the Cursor to specified Position
  fc:	0e 94 49 00 	call	0x92	; 0x92 <LCD_CmdWrite>
 100:	08 95       	ret

00000102 <LCD_DataWrite>:
 *
 */
void LCD_DataWrite ( char dat )
	{

		databus = dat ;            // Send the data to LCD
 102:	88 bb       	out	0x18, r24	; 24
		control_bus |= 1 << rs ;	// Select the Data Register by pulling RS HIGH
 104:	8b b3       	in	r24, 0x1b	; 27
 106:	81 60       	ori	r24, 0x01	; 1
 108:	8b bb       	out	0x1b, r24	; 27
		control_bus &= ~ ( 1 << rw ) ;	// Select the Write Operation  by pulling RW LOW
 10a:	8b b3       	in	r24, 0x1b	; 27
 10c:	8d 7f       	andi	r24, 0xFD	; 253
 10e:	8b bb       	out	0x1b, r24	; 27
		control_bus |= 1 << en ;	// Send a High-to-Low Pusle at Enable Pin
 110:	8b b3       	in	r24, 0x1b	; 27
 112:	84 60       	ori	r24, 0x04	; 4
 114:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	00 00       	nop
		_delay_us ( 1 ) ;
		control_bus &= ~ ( 1 << en ) ;
 118:	8b b3       	in	r24, 0x1b	; 27
 11a:	8b 7f       	andi	r24, 0xFB	; 251
 11c:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11e:	89 ef       	ldi	r24, 0xF9	; 249
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <LCD_DataWrite+0x20>
 126:	00 c0       	rjmp	.+0      	; 0x128 <LCD_DataWrite+0x26>
 128:	00 00       	nop
 12a:	08 95       	ret

0000012c <LCD_DisplayString>:
 * I/P Arguments: String(Address of the string) to be displayed.
 * Return value : None
 *
 */
void LCD_DisplayString ( char *string_ptr )
	{
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	ec 01       	movw	r28, r24
		while ( *string_ptr )
 132:	03 c0       	rjmp	.+6      	; 0x13a <LCD_DisplayString+0xe>
			LCD_DataWrite ( *string_ptr++ );
 134:	21 96       	adiw	r28, 0x01	; 1
 136:	0e 94 81 00 	call	0x102	; 0x102 <LCD_DataWrite>
 * Return value : None
 *
 */
void LCD_DisplayString ( char *string_ptr )
	{
		while ( *string_ptr )
 13a:	88 81       	ld	r24, Y
 13c:	81 11       	cpse	r24, r1
 13e:	fa cf       	rjmp	.-12     	; 0x134 <LCD_DisplayString+0x8>
			LCD_DataWrite ( *string_ptr++ );
	}
 140:	df 91       	pop	r29
 142:	cf 91       	pop	r28
 144:	08 95       	ret

00000146 <__vector_7>:
#include "LIB/Configuration.h"
#include "LIB/LCD_8_bit.h"
int tenth = 0, Sec = 0, Min = 0, Hour = 0;
char st [20], a = 0;
ISR (TIMER1_COMPA_vect)
{
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	8f 93       	push	r24
 152:	9f 93       	push	r25
	tenth++;
 154:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <tenth>
 158:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <tenth+0x1>
 15c:	01 96       	adiw	r24, 0x01	; 1
 15e:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <tenth+0x1>
 162:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <tenth>
	if (tenth == 10)
 166:	0a 97       	sbiw	r24, 0x0a	; 10
 168:	89 f5       	brne	.+98     	; 0x1cc <__vector_7+0x86>
	{
		Sec++; tenth = 0;
 16a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Sec>
 16e:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <Sec+0x1>
 172:	01 96       	adiw	r24, 0x01	; 1
 174:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <Sec+0x1>
 178:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <Sec>
 17c:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <tenth+0x1>
 180:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <tenth>
		if (Sec == 60)
 184:	cc 97       	sbiw	r24, 0x3c	; 60
 186:	11 f5       	brne	.+68     	; 0x1cc <__vector_7+0x86>
		{
			Min++; Sec = 0;
 188:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <Min>
 18c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <Min+0x1>
 190:	01 96       	adiw	r24, 0x01	; 1
 192:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <Min+0x1>
 196:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <Min>
 19a:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <Sec+0x1>
 19e:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <Sec>
			if (Min == 60)
 1a2:	cc 97       	sbiw	r24, 0x3c	; 60
 1a4:	99 f4       	brne	.+38     	; 0x1cc <__vector_7+0x86>
			{
				Hour++; Min = 0;
 1a6:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 1aa:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__data_end+0x1>
 1ae:	01 96       	adiw	r24, 0x01	; 1
 1b0:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <__data_end+0x1>
 1b4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
 1b8:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <Min+0x1>
 1bc:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <Min>
				if (Hour == 24)
 1c0:	48 97       	sbiw	r24, 0x18	; 24
 1c2:	21 f4       	brne	.+8      	; 0x1cc <__vector_7+0x86>
				{
					Hour = 0;
 1c4:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__data_end+0x1>
 1c8:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
				}
			}
		}
	}
}
 1cc:	9f 91       	pop	r25
 1ce:	8f 91       	pop	r24
 1d0:	0f 90       	pop	r0
 1d2:	0f be       	out	0x3f, r0	; 63
 1d4:	0f 90       	pop	r0
 1d6:	1f 90       	pop	r1
 1d8:	18 95       	reti

000001da <__vector_2>:
ISR(INT1_vect)
{
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	8f 93       	push	r24
 1e6:	9f 93       	push	r25
	Min++;
 1e8:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <Min>
 1ec:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <Min+0x1>
 1f0:	01 96       	adiw	r24, 0x01	; 1
 1f2:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <Min+0x1>
 1f6:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <Min>
}
 1fa:	9f 91       	pop	r25
 1fc:	8f 91       	pop	r24
 1fe:	0f 90       	pop	r0
 200:	0f be       	out	0x3f, r0	; 63
 202:	0f 90       	pop	r0
 204:	1f 90       	pop	r1
 206:	18 95       	reti

00000208 <__vector_1>:
ISR(INT0_vect)
{
 208:	1f 92       	push	r1
 20a:	0f 92       	push	r0
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
 212:	8f 93       	push	r24
 214:	9f 93       	push	r25
	Sec++;
 216:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Sec>
 21a:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <Sec+0x1>
 21e:	01 96       	adiw	r24, 0x01	; 1
 220:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <Sec+0x1>
 224:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <Sec>
}
 228:	9f 91       	pop	r25
 22a:	8f 91       	pop	r24
 22c:	0f 90       	pop	r0
 22e:	0f be       	out	0x3f, r0	; 63
 230:	0f 90       	pop	r0
 232:	1f 90       	pop	r1
 234:	18 95       	reti

00000236 <main>:
int main(void)
{
	TCCR1B = (1<<WGM12) | (1<<CS11);
 236:	9a e0       	ldi	r25, 0x0A	; 10
 238:	9e bd       	out	0x2e, r25	; 46
	OCR1AH = 0x30;
 23a:	80 e3       	ldi	r24, 0x30	; 48
 23c:	8b bd       	out	0x2b, r24	; 43
	OCR1AL = 0xD3;
 23e:	83 ed       	ldi	r24, 0xD3	; 211
 240:	8a bd       	out	0x2a, r24	; 42
	TIMSK = (1<<OCIE1A);
 242:	80 e1       	ldi	r24, 0x10	; 16
 244:	89 bf       	out	0x39, r24	; 57
	GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
 246:	8b b7       	in	r24, 0x3b	; 59
 248:	80 6c       	ori	r24, 0xC0	; 192
 24a:	8b bf       	out	0x3b, r24	; 59
	MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
 24c:	95 bf       	out	0x35, r25	; 53
	MCUCSR=(0<<ISC2);
 24e:	14 be       	out	0x34, r1	; 52
	GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
 250:	80 ec       	ldi	r24, 0xC0	; 192
 252:	8a bf       	out	0x3a, r24	; 58
	PORTD |= (1 << PORTD2) | (1 << PORTD3) ;
 254:	82 b3       	in	r24, 0x12	; 18
 256:	8c 60       	ori	r24, 0x0C	; 12
 258:	82 bb       	out	0x12, r24	; 18
	sei();
 25a:	78 94       	sei
	LCD_Init();
 25c:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Init>
	while (1)
	{
		sprintf (st, "%02d:%02d:%02d " , Hour, Min, Sec);
 260:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <Sec+0x1>
 264:	8f 93       	push	r24
 266:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Sec>
 26a:	8f 93       	push	r24
 26c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <Min+0x1>
 270:	8f 93       	push	r24
 272:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <Min>
 276:	8f 93       	push	r24
 278:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__data_end+0x1>
 27c:	8f 93       	push	r24
 27e:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 282:	8f 93       	push	r24
 284:	80 e6       	ldi	r24, 0x60	; 96
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	9f 93       	push	r25
 28a:	8f 93       	push	r24
 28c:	88 e7       	ldi	r24, 0x78	; 120
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	9f 93       	push	r25
 292:	8f 93       	push	r24
 294:	0e 94 5d 01 	call	0x2ba	; 0x2ba <sprintf>
		LCD_GoToXY (0,0);
 298:	60 e0       	ldi	r22, 0x00	; 0
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	0e 94 74 00 	call	0xe8	; 0xe8 <LCD_GoToXY>
		LCD_DisplayString (st);
 2a0:	88 e7       	ldi	r24, 0x78	; 120
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 94 96 00 	call	0x12c	; 0x12c <LCD_DisplayString>
 2a8:	8d b7       	in	r24, 0x3d	; 61
 2aa:	9e b7       	in	r25, 0x3e	; 62
 2ac:	0a 96       	adiw	r24, 0x0a	; 10
 2ae:	0f b6       	in	r0, 0x3f	; 63
 2b0:	f8 94       	cli
 2b2:	9e bf       	out	0x3e, r25	; 62
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	8d bf       	out	0x3d, r24	; 61
 2b8:	d3 cf       	rjmp	.-90     	; 0x260 <main+0x2a>

000002ba <sprintf>:
 2ba:	ae e0       	ldi	r26, 0x0E	; 14
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
 2be:	e3 e6       	ldi	r30, 0x63	; 99
 2c0:	f1 e0       	ldi	r31, 0x01	; 1
 2c2:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__prologue_saves__+0x1c>
 2c6:	0d 89       	ldd	r16, Y+21	; 0x15
 2c8:	1e 89       	ldd	r17, Y+22	; 0x16
 2ca:	86 e0       	ldi	r24, 0x06	; 6
 2cc:	8c 83       	std	Y+4, r24	; 0x04
 2ce:	1a 83       	std	Y+2, r17	; 0x02
 2d0:	09 83       	std	Y+1, r16	; 0x01
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	9f e7       	ldi	r25, 0x7F	; 127
 2d6:	9e 83       	std	Y+6, r25	; 0x06
 2d8:	8d 83       	std	Y+5, r24	; 0x05
 2da:	ae 01       	movw	r20, r28
 2dc:	47 5e       	subi	r20, 0xE7	; 231
 2de:	5f 4f       	sbci	r21, 0xFF	; 255
 2e0:	6f 89       	ldd	r22, Y+23	; 0x17
 2e2:	78 8d       	ldd	r23, Y+24	; 0x18
 2e4:	ce 01       	movw	r24, r28
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	0e 94 7f 01 	call	0x2fe	; 0x2fe <vfprintf>
 2ec:	ef 81       	ldd	r30, Y+7	; 0x07
 2ee:	f8 85       	ldd	r31, Y+8	; 0x08
 2f0:	e0 0f       	add	r30, r16
 2f2:	f1 1f       	adc	r31, r17
 2f4:	10 82       	st	Z, r1
 2f6:	2e 96       	adiw	r28, 0x0e	; 14
 2f8:	e4 e0       	ldi	r30, 0x04	; 4
 2fa:	0c 94 3a 04 	jmp	0x874	; 0x874 <__stack+0x15>

000002fe <vfprintf>:
 2fe:	ab e0       	ldi	r26, 0x0B	; 11
 300:	b0 e0       	ldi	r27, 0x00	; 0
 302:	e5 e8       	ldi	r30, 0x85	; 133
 304:	f1 e0       	ldi	r31, 0x01	; 1
 306:	0c 94 10 04 	jmp	0x820	; 0x820 <__prologue_saves__>
 30a:	6c 01       	movw	r12, r24
 30c:	7b 01       	movw	r14, r22
 30e:	8a 01       	movw	r16, r20
 310:	fc 01       	movw	r30, r24
 312:	17 82       	std	Z+7, r1	; 0x07
 314:	16 82       	std	Z+6, r1	; 0x06
 316:	83 81       	ldd	r24, Z+3	; 0x03
 318:	81 ff       	sbrs	r24, 1
 31a:	cc c1       	rjmp	.+920    	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
 31c:	ce 01       	movw	r24, r28
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	3c 01       	movw	r6, r24
 322:	f6 01       	movw	r30, r12
 324:	93 81       	ldd	r25, Z+3	; 0x03
 326:	f7 01       	movw	r30, r14
 328:	93 fd       	sbrc	r25, 3
 32a:	85 91       	lpm	r24, Z+
 32c:	93 ff       	sbrs	r25, 3
 32e:	81 91       	ld	r24, Z+
 330:	7f 01       	movw	r14, r30
 332:	88 23       	and	r24, r24
 334:	09 f4       	brne	.+2      	; 0x338 <vfprintf+0x3a>
 336:	ba c1       	rjmp	.+884    	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 338:	85 32       	cpi	r24, 0x25	; 37
 33a:	39 f4       	brne	.+14     	; 0x34a <vfprintf+0x4c>
 33c:	93 fd       	sbrc	r25, 3
 33e:	85 91       	lpm	r24, Z+
 340:	93 ff       	sbrs	r25, 3
 342:	81 91       	ld	r24, Z+
 344:	7f 01       	movw	r14, r30
 346:	85 32       	cpi	r24, 0x25	; 37
 348:	29 f4       	brne	.+10     	; 0x354 <vfprintf+0x56>
 34a:	b6 01       	movw	r22, r12
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 352:	e7 cf       	rjmp	.-50     	; 0x322 <vfprintf+0x24>
 354:	91 2c       	mov	r9, r1
 356:	21 2c       	mov	r2, r1
 358:	31 2c       	mov	r3, r1
 35a:	ff e1       	ldi	r31, 0x1F	; 31
 35c:	f3 15       	cp	r31, r3
 35e:	d8 f0       	brcs	.+54     	; 0x396 <vfprintf+0x98>
 360:	8b 32       	cpi	r24, 0x2B	; 43
 362:	79 f0       	breq	.+30     	; 0x382 <vfprintf+0x84>
 364:	38 f4       	brcc	.+14     	; 0x374 <vfprintf+0x76>
 366:	80 32       	cpi	r24, 0x20	; 32
 368:	79 f0       	breq	.+30     	; 0x388 <vfprintf+0x8a>
 36a:	83 32       	cpi	r24, 0x23	; 35
 36c:	a1 f4       	brne	.+40     	; 0x396 <vfprintf+0x98>
 36e:	23 2d       	mov	r18, r3
 370:	20 61       	ori	r18, 0x10	; 16
 372:	1d c0       	rjmp	.+58     	; 0x3ae <vfprintf+0xb0>
 374:	8d 32       	cpi	r24, 0x2D	; 45
 376:	61 f0       	breq	.+24     	; 0x390 <vfprintf+0x92>
 378:	80 33       	cpi	r24, 0x30	; 48
 37a:	69 f4       	brne	.+26     	; 0x396 <vfprintf+0x98>
 37c:	23 2d       	mov	r18, r3
 37e:	21 60       	ori	r18, 0x01	; 1
 380:	16 c0       	rjmp	.+44     	; 0x3ae <vfprintf+0xb0>
 382:	83 2d       	mov	r24, r3
 384:	82 60       	ori	r24, 0x02	; 2
 386:	38 2e       	mov	r3, r24
 388:	e3 2d       	mov	r30, r3
 38a:	e4 60       	ori	r30, 0x04	; 4
 38c:	3e 2e       	mov	r3, r30
 38e:	2a c0       	rjmp	.+84     	; 0x3e4 <vfprintf+0xe6>
 390:	f3 2d       	mov	r31, r3
 392:	f8 60       	ori	r31, 0x08	; 8
 394:	1d c0       	rjmp	.+58     	; 0x3d0 <vfprintf+0xd2>
 396:	37 fc       	sbrc	r3, 7
 398:	2d c0       	rjmp	.+90     	; 0x3f4 <vfprintf+0xf6>
 39a:	20 ed       	ldi	r18, 0xD0	; 208
 39c:	28 0f       	add	r18, r24
 39e:	2a 30       	cpi	r18, 0x0A	; 10
 3a0:	40 f0       	brcs	.+16     	; 0x3b2 <vfprintf+0xb4>
 3a2:	8e 32       	cpi	r24, 0x2E	; 46
 3a4:	b9 f4       	brne	.+46     	; 0x3d4 <vfprintf+0xd6>
 3a6:	36 fc       	sbrc	r3, 6
 3a8:	81 c1       	rjmp	.+770    	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 3aa:	23 2d       	mov	r18, r3
 3ac:	20 64       	ori	r18, 0x40	; 64
 3ae:	32 2e       	mov	r3, r18
 3b0:	19 c0       	rjmp	.+50     	; 0x3e4 <vfprintf+0xe6>
 3b2:	36 fe       	sbrs	r3, 6
 3b4:	06 c0       	rjmp	.+12     	; 0x3c2 <vfprintf+0xc4>
 3b6:	8a e0       	ldi	r24, 0x0A	; 10
 3b8:	98 9e       	mul	r9, r24
 3ba:	20 0d       	add	r18, r0
 3bc:	11 24       	eor	r1, r1
 3be:	92 2e       	mov	r9, r18
 3c0:	11 c0       	rjmp	.+34     	; 0x3e4 <vfprintf+0xe6>
 3c2:	ea e0       	ldi	r30, 0x0A	; 10
 3c4:	2e 9e       	mul	r2, r30
 3c6:	20 0d       	add	r18, r0
 3c8:	11 24       	eor	r1, r1
 3ca:	22 2e       	mov	r2, r18
 3cc:	f3 2d       	mov	r31, r3
 3ce:	f0 62       	ori	r31, 0x20	; 32
 3d0:	3f 2e       	mov	r3, r31
 3d2:	08 c0       	rjmp	.+16     	; 0x3e4 <vfprintf+0xe6>
 3d4:	8c 36       	cpi	r24, 0x6C	; 108
 3d6:	21 f4       	brne	.+8      	; 0x3e0 <vfprintf+0xe2>
 3d8:	83 2d       	mov	r24, r3
 3da:	80 68       	ori	r24, 0x80	; 128
 3dc:	38 2e       	mov	r3, r24
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <vfprintf+0xe6>
 3e0:	88 36       	cpi	r24, 0x68	; 104
 3e2:	41 f4       	brne	.+16     	; 0x3f4 <vfprintf+0xf6>
 3e4:	f7 01       	movw	r30, r14
 3e6:	93 fd       	sbrc	r25, 3
 3e8:	85 91       	lpm	r24, Z+
 3ea:	93 ff       	sbrs	r25, 3
 3ec:	81 91       	ld	r24, Z+
 3ee:	7f 01       	movw	r14, r30
 3f0:	81 11       	cpse	r24, r1
 3f2:	b3 cf       	rjmp	.-154    	; 0x35a <vfprintf+0x5c>
 3f4:	98 2f       	mov	r25, r24
 3f6:	9f 7d       	andi	r25, 0xDF	; 223
 3f8:	95 54       	subi	r25, 0x45	; 69
 3fa:	93 30       	cpi	r25, 0x03	; 3
 3fc:	28 f4       	brcc	.+10     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3fe:	0c 5f       	subi	r16, 0xFC	; 252
 400:	1f 4f       	sbci	r17, 0xFF	; 255
 402:	9f e3       	ldi	r25, 0x3F	; 63
 404:	99 83       	std	Y+1, r25	; 0x01
 406:	0d c0       	rjmp	.+26     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 408:	83 36       	cpi	r24, 0x63	; 99
 40a:	31 f0       	breq	.+12     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 40c:	83 37       	cpi	r24, 0x73	; 115
 40e:	71 f0       	breq	.+28     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 410:	83 35       	cpi	r24, 0x53	; 83
 412:	09 f0       	breq	.+2      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 414:	59 c0       	rjmp	.+178    	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 416:	21 c0       	rjmp	.+66     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 418:	f8 01       	movw	r30, r16
 41a:	80 81       	ld	r24, Z
 41c:	89 83       	std	Y+1, r24	; 0x01
 41e:	0e 5f       	subi	r16, 0xFE	; 254
 420:	1f 4f       	sbci	r17, 0xFF	; 255
 422:	88 24       	eor	r8, r8
 424:	83 94       	inc	r8
 426:	91 2c       	mov	r9, r1
 428:	53 01       	movw	r10, r6
 42a:	13 c0       	rjmp	.+38     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 42c:	28 01       	movw	r4, r16
 42e:	f2 e0       	ldi	r31, 0x02	; 2
 430:	4f 0e       	add	r4, r31
 432:	51 1c       	adc	r5, r1
 434:	f8 01       	movw	r30, r16
 436:	a0 80       	ld	r10, Z
 438:	b1 80       	ldd	r11, Z+1	; 0x01
 43a:	36 fe       	sbrs	r3, 6
 43c:	03 c0       	rjmp	.+6      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 43e:	69 2d       	mov	r22, r9
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	02 c0       	rjmp	.+4      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 444:	6f ef       	ldi	r22, 0xFF	; 255
 446:	7f ef       	ldi	r23, 0xFF	; 255
 448:	c5 01       	movw	r24, r10
 44a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <strnlen>
 44e:	4c 01       	movw	r8, r24
 450:	82 01       	movw	r16, r4
 452:	f3 2d       	mov	r31, r3
 454:	ff 77       	andi	r31, 0x7F	; 127
 456:	3f 2e       	mov	r3, r31
 458:	16 c0       	rjmp	.+44     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 45a:	28 01       	movw	r4, r16
 45c:	22 e0       	ldi	r18, 0x02	; 2
 45e:	42 0e       	add	r4, r18
 460:	51 1c       	adc	r5, r1
 462:	f8 01       	movw	r30, r16
 464:	a0 80       	ld	r10, Z
 466:	b1 80       	ldd	r11, Z+1	; 0x01
 468:	36 fe       	sbrs	r3, 6
 46a:	03 c0       	rjmp	.+6      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46c:	69 2d       	mov	r22, r9
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	02 c0       	rjmp	.+4      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 472:	6f ef       	ldi	r22, 0xFF	; 255
 474:	7f ef       	ldi	r23, 0xFF	; 255
 476:	c5 01       	movw	r24, r10
 478:	0e 94 60 03 	call	0x6c0	; 0x6c0 <strnlen_P>
 47c:	4c 01       	movw	r8, r24
 47e:	f3 2d       	mov	r31, r3
 480:	f0 68       	ori	r31, 0x80	; 128
 482:	3f 2e       	mov	r3, r31
 484:	82 01       	movw	r16, r4
 486:	33 fc       	sbrc	r3, 3
 488:	1b c0       	rjmp	.+54     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 48a:	82 2d       	mov	r24, r2
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	88 16       	cp	r8, r24
 490:	99 06       	cpc	r9, r25
 492:	b0 f4       	brcc	.+44     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 494:	b6 01       	movw	r22, r12
 496:	80 e2       	ldi	r24, 0x20	; 32
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 49e:	2a 94       	dec	r2
 4a0:	f4 cf       	rjmp	.-24     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 4a2:	f5 01       	movw	r30, r10
 4a4:	37 fc       	sbrc	r3, 7
 4a6:	85 91       	lpm	r24, Z+
 4a8:	37 fe       	sbrs	r3, 7
 4aa:	81 91       	ld	r24, Z+
 4ac:	5f 01       	movw	r10, r30
 4ae:	b6 01       	movw	r22, r12
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 4b6:	21 10       	cpse	r2, r1
 4b8:	2a 94       	dec	r2
 4ba:	21 e0       	ldi	r18, 0x01	; 1
 4bc:	82 1a       	sub	r8, r18
 4be:	91 08       	sbc	r9, r1
 4c0:	81 14       	cp	r8, r1
 4c2:	91 04       	cpc	r9, r1
 4c4:	71 f7       	brne	.-36     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 4c6:	e8 c0       	rjmp	.+464    	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 4c8:	84 36       	cpi	r24, 0x64	; 100
 4ca:	11 f0       	breq	.+4      	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4cc:	89 36       	cpi	r24, 0x69	; 105
 4ce:	41 f5       	brne	.+80     	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
 4d0:	f8 01       	movw	r30, r16
 4d2:	37 fe       	sbrs	r3, 7
 4d4:	07 c0       	rjmp	.+14     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4d6:	60 81       	ld	r22, Z
 4d8:	71 81       	ldd	r23, Z+1	; 0x01
 4da:	82 81       	ldd	r24, Z+2	; 0x02
 4dc:	93 81       	ldd	r25, Z+3	; 0x03
 4de:	0c 5f       	subi	r16, 0xFC	; 252
 4e0:	1f 4f       	sbci	r17, 0xFF	; 255
 4e2:	08 c0       	rjmp	.+16     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4e4:	60 81       	ld	r22, Z
 4e6:	71 81       	ldd	r23, Z+1	; 0x01
 4e8:	07 2e       	mov	r0, r23
 4ea:	00 0c       	add	r0, r0
 4ec:	88 0b       	sbc	r24, r24
 4ee:	99 0b       	sbc	r25, r25
 4f0:	0e 5f       	subi	r16, 0xFE	; 254
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	f3 2d       	mov	r31, r3
 4f6:	ff 76       	andi	r31, 0x6F	; 111
 4f8:	3f 2e       	mov	r3, r31
 4fa:	97 ff       	sbrs	r25, 7
 4fc:	09 c0       	rjmp	.+18     	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
 4fe:	90 95       	com	r25
 500:	80 95       	com	r24
 502:	70 95       	com	r23
 504:	61 95       	neg	r22
 506:	7f 4f       	sbci	r23, 0xFF	; 255
 508:	8f 4f       	sbci	r24, 0xFF	; 255
 50a:	9f 4f       	sbci	r25, 0xFF	; 255
 50c:	f0 68       	ori	r31, 0x80	; 128
 50e:	3f 2e       	mov	r3, r31
 510:	2a e0       	ldi	r18, 0x0A	; 10
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	a3 01       	movw	r20, r6
 516:	0e 94 b2 03 	call	0x764	; 0x764 <__ultoa_invert>
 51a:	88 2e       	mov	r8, r24
 51c:	86 18       	sub	r8, r6
 51e:	45 c0       	rjmp	.+138    	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 520:	85 37       	cpi	r24, 0x75	; 117
 522:	31 f4       	brne	.+12     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 524:	23 2d       	mov	r18, r3
 526:	2f 7e       	andi	r18, 0xEF	; 239
 528:	b2 2e       	mov	r11, r18
 52a:	2a e0       	ldi	r18, 0x0A	; 10
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	25 c0       	rjmp	.+74     	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 530:	93 2d       	mov	r25, r3
 532:	99 7f       	andi	r25, 0xF9	; 249
 534:	b9 2e       	mov	r11, r25
 536:	8f 36       	cpi	r24, 0x6F	; 111
 538:	c1 f0       	breq	.+48     	; 0x56a <__EEPROM_REGION_LENGTH__+0x16a>
 53a:	18 f4       	brcc	.+6      	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 53c:	88 35       	cpi	r24, 0x58	; 88
 53e:	79 f0       	breq	.+30     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 540:	b5 c0       	rjmp	.+362    	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 542:	80 37       	cpi	r24, 0x70	; 112
 544:	19 f0       	breq	.+6      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 546:	88 37       	cpi	r24, 0x78	; 120
 548:	21 f0       	breq	.+8      	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 54a:	b0 c0       	rjmp	.+352    	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 54c:	e9 2f       	mov	r30, r25
 54e:	e0 61       	ori	r30, 0x10	; 16
 550:	be 2e       	mov	r11, r30
 552:	b4 fe       	sbrs	r11, 4
 554:	0d c0       	rjmp	.+26     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 556:	fb 2d       	mov	r31, r11
 558:	f4 60       	ori	r31, 0x04	; 4
 55a:	bf 2e       	mov	r11, r31
 55c:	09 c0       	rjmp	.+18     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 55e:	34 fe       	sbrs	r3, 4
 560:	0a c0       	rjmp	.+20     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 562:	29 2f       	mov	r18, r25
 564:	26 60       	ori	r18, 0x06	; 6
 566:	b2 2e       	mov	r11, r18
 568:	06 c0       	rjmp	.+12     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 56a:	28 e0       	ldi	r18, 0x08	; 8
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	05 c0       	rjmp	.+10     	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 570:	20 e1       	ldi	r18, 0x10	; 16
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	02 c0       	rjmp	.+4      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 576:	20 e1       	ldi	r18, 0x10	; 16
 578:	32 e0       	ldi	r19, 0x02	; 2
 57a:	f8 01       	movw	r30, r16
 57c:	b7 fe       	sbrs	r11, 7
 57e:	07 c0       	rjmp	.+14     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 580:	60 81       	ld	r22, Z
 582:	71 81       	ldd	r23, Z+1	; 0x01
 584:	82 81       	ldd	r24, Z+2	; 0x02
 586:	93 81       	ldd	r25, Z+3	; 0x03
 588:	0c 5f       	subi	r16, 0xFC	; 252
 58a:	1f 4f       	sbci	r17, 0xFF	; 255
 58c:	06 c0       	rjmp	.+12     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 58e:	60 81       	ld	r22, Z
 590:	71 81       	ldd	r23, Z+1	; 0x01
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 5f       	subi	r16, 0xFE	; 254
 598:	1f 4f       	sbci	r17, 0xFF	; 255
 59a:	a3 01       	movw	r20, r6
 59c:	0e 94 b2 03 	call	0x764	; 0x764 <__ultoa_invert>
 5a0:	88 2e       	mov	r8, r24
 5a2:	86 18       	sub	r8, r6
 5a4:	fb 2d       	mov	r31, r11
 5a6:	ff 77       	andi	r31, 0x7F	; 127
 5a8:	3f 2e       	mov	r3, r31
 5aa:	36 fe       	sbrs	r3, 6
 5ac:	0d c0       	rjmp	.+26     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 5ae:	23 2d       	mov	r18, r3
 5b0:	2e 7f       	andi	r18, 0xFE	; 254
 5b2:	a2 2e       	mov	r10, r18
 5b4:	89 14       	cp	r8, r9
 5b6:	58 f4       	brcc	.+22     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5b8:	34 fe       	sbrs	r3, 4
 5ba:	0b c0       	rjmp	.+22     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5bc:	32 fc       	sbrc	r3, 2
 5be:	09 c0       	rjmp	.+18     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5c0:	83 2d       	mov	r24, r3
 5c2:	8e 7e       	andi	r24, 0xEE	; 238
 5c4:	a8 2e       	mov	r10, r24
 5c6:	05 c0       	rjmp	.+10     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5c8:	b8 2c       	mov	r11, r8
 5ca:	a3 2c       	mov	r10, r3
 5cc:	03 c0       	rjmp	.+6      	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5ce:	b8 2c       	mov	r11, r8
 5d0:	01 c0       	rjmp	.+2      	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5d2:	b9 2c       	mov	r11, r9
 5d4:	a4 fe       	sbrs	r10, 4
 5d6:	0f c0       	rjmp	.+30     	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5d8:	fe 01       	movw	r30, r28
 5da:	e8 0d       	add	r30, r8
 5dc:	f1 1d       	adc	r31, r1
 5de:	80 81       	ld	r24, Z
 5e0:	80 33       	cpi	r24, 0x30	; 48
 5e2:	21 f4       	brne	.+8      	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5e4:	9a 2d       	mov	r25, r10
 5e6:	99 7e       	andi	r25, 0xE9	; 233
 5e8:	a9 2e       	mov	r10, r25
 5ea:	09 c0       	rjmp	.+18     	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5ec:	a2 fe       	sbrs	r10, 2
 5ee:	06 c0       	rjmp	.+12     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5f0:	b3 94       	inc	r11
 5f2:	b3 94       	inc	r11
 5f4:	04 c0       	rjmp	.+8      	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5f6:	8a 2d       	mov	r24, r10
 5f8:	86 78       	andi	r24, 0x86	; 134
 5fa:	09 f0       	breq	.+2      	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5fc:	b3 94       	inc	r11
 5fe:	a3 fc       	sbrc	r10, 3
 600:	11 c0       	rjmp	.+34     	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 602:	a0 fe       	sbrs	r10, 0
 604:	06 c0       	rjmp	.+12     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 606:	b2 14       	cp	r11, r2
 608:	88 f4       	brcc	.+34     	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 60a:	28 0c       	add	r2, r8
 60c:	92 2c       	mov	r9, r2
 60e:	9b 18       	sub	r9, r11
 610:	0e c0       	rjmp	.+28     	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
 612:	b2 14       	cp	r11, r2
 614:	60 f4       	brcc	.+24     	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
 616:	b6 01       	movw	r22, r12
 618:	80 e2       	ldi	r24, 0x20	; 32
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 620:	b3 94       	inc	r11
 622:	f7 cf       	rjmp	.-18     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 624:	b2 14       	cp	r11, r2
 626:	18 f4       	brcc	.+6      	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
 628:	2b 18       	sub	r2, r11
 62a:	02 c0       	rjmp	.+4      	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 62c:	98 2c       	mov	r9, r8
 62e:	21 2c       	mov	r2, r1
 630:	a4 fe       	sbrs	r10, 4
 632:	10 c0       	rjmp	.+32     	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 634:	b6 01       	movw	r22, r12
 636:	80 e3       	ldi	r24, 0x30	; 48
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 63e:	a2 fe       	sbrs	r10, 2
 640:	17 c0       	rjmp	.+46     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 642:	a1 fc       	sbrc	r10, 1
 644:	03 c0       	rjmp	.+6      	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 646:	88 e7       	ldi	r24, 0x78	; 120
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
 64c:	88 e5       	ldi	r24, 0x58	; 88
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	b6 01       	movw	r22, r12
 652:	0c c0       	rjmp	.+24     	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
 654:	8a 2d       	mov	r24, r10
 656:	86 78       	andi	r24, 0x86	; 134
 658:	59 f0       	breq	.+22     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 65a:	a1 fe       	sbrs	r10, 1
 65c:	02 c0       	rjmp	.+4      	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 65e:	8b e2       	ldi	r24, 0x2B	; 43
 660:	01 c0       	rjmp	.+2      	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	a7 fc       	sbrc	r10, 7
 666:	8d e2       	ldi	r24, 0x2D	; 45
 668:	b6 01       	movw	r22, r12
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 670:	89 14       	cp	r8, r9
 672:	38 f4       	brcc	.+14     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 674:	b6 01       	movw	r22, r12
 676:	80 e3       	ldi	r24, 0x30	; 48
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 67e:	9a 94       	dec	r9
 680:	f7 cf       	rjmp	.-18     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 682:	8a 94       	dec	r8
 684:	f3 01       	movw	r30, r6
 686:	e8 0d       	add	r30, r8
 688:	f1 1d       	adc	r31, r1
 68a:	80 81       	ld	r24, Z
 68c:	b6 01       	movw	r22, r12
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 694:	81 10       	cpse	r8, r1
 696:	f5 cf       	rjmp	.-22     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 698:	22 20       	and	r2, r2
 69a:	09 f4       	brne	.+2      	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 69c:	42 ce       	rjmp	.-892    	; 0x322 <vfprintf+0x24>
 69e:	b6 01       	movw	r22, r12
 6a0:	80 e2       	ldi	r24, 0x20	; 32
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 94 76 03 	call	0x6ec	; 0x6ec <fputc>
 6a8:	2a 94       	dec	r2
 6aa:	f6 cf       	rjmp	.-20     	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 6ac:	f6 01       	movw	r30, r12
 6ae:	86 81       	ldd	r24, Z+6	; 0x06
 6b0:	97 81       	ldd	r25, Z+7	; 0x07
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <__EEPROM_REGION_LENGTH__+0x2b8>
 6b4:	8f ef       	ldi	r24, 0xFF	; 255
 6b6:	9f ef       	ldi	r25, 0xFF	; 255
 6b8:	2b 96       	adiw	r28, 0x0b	; 11
 6ba:	e2 e1       	ldi	r30, 0x12	; 18
 6bc:	0c 94 2c 04 	jmp	0x858	; 0x858 <__epilogue_restores__>

000006c0 <strnlen_P>:
 6c0:	fc 01       	movw	r30, r24
 6c2:	05 90       	lpm	r0, Z+
 6c4:	61 50       	subi	r22, 0x01	; 1
 6c6:	70 40       	sbci	r23, 0x00	; 0
 6c8:	01 10       	cpse	r0, r1
 6ca:	d8 f7       	brcc	.-10     	; 0x6c2 <strnlen_P+0x2>
 6cc:	80 95       	com	r24
 6ce:	90 95       	com	r25
 6d0:	8e 0f       	add	r24, r30
 6d2:	9f 1f       	adc	r25, r31
 6d4:	08 95       	ret

000006d6 <strnlen>:
 6d6:	fc 01       	movw	r30, r24
 6d8:	61 50       	subi	r22, 0x01	; 1
 6da:	70 40       	sbci	r23, 0x00	; 0
 6dc:	01 90       	ld	r0, Z+
 6de:	01 10       	cpse	r0, r1
 6e0:	d8 f7       	brcc	.-10     	; 0x6d8 <strnlen+0x2>
 6e2:	80 95       	com	r24
 6e4:	90 95       	com	r25
 6e6:	8e 0f       	add	r24, r30
 6e8:	9f 1f       	adc	r25, r31
 6ea:	08 95       	ret

000006ec <fputc>:
 6ec:	0f 93       	push	r16
 6ee:	1f 93       	push	r17
 6f0:	cf 93       	push	r28
 6f2:	df 93       	push	r29
 6f4:	fb 01       	movw	r30, r22
 6f6:	23 81       	ldd	r18, Z+3	; 0x03
 6f8:	21 fd       	sbrc	r18, 1
 6fa:	03 c0       	rjmp	.+6      	; 0x702 <fputc+0x16>
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	9f ef       	ldi	r25, 0xFF	; 255
 700:	2c c0       	rjmp	.+88     	; 0x75a <fputc+0x6e>
 702:	22 ff       	sbrs	r18, 2
 704:	16 c0       	rjmp	.+44     	; 0x732 <fputc+0x46>
 706:	46 81       	ldd	r20, Z+6	; 0x06
 708:	57 81       	ldd	r21, Z+7	; 0x07
 70a:	24 81       	ldd	r18, Z+4	; 0x04
 70c:	35 81       	ldd	r19, Z+5	; 0x05
 70e:	42 17       	cp	r20, r18
 710:	53 07       	cpc	r21, r19
 712:	44 f4       	brge	.+16     	; 0x724 <fputc+0x38>
 714:	a0 81       	ld	r26, Z
 716:	b1 81       	ldd	r27, Z+1	; 0x01
 718:	9d 01       	movw	r18, r26
 71a:	2f 5f       	subi	r18, 0xFF	; 255
 71c:	3f 4f       	sbci	r19, 0xFF	; 255
 71e:	31 83       	std	Z+1, r19	; 0x01
 720:	20 83       	st	Z, r18
 722:	8c 93       	st	X, r24
 724:	26 81       	ldd	r18, Z+6	; 0x06
 726:	37 81       	ldd	r19, Z+7	; 0x07
 728:	2f 5f       	subi	r18, 0xFF	; 255
 72a:	3f 4f       	sbci	r19, 0xFF	; 255
 72c:	37 83       	std	Z+7, r19	; 0x07
 72e:	26 83       	std	Z+6, r18	; 0x06
 730:	14 c0       	rjmp	.+40     	; 0x75a <fputc+0x6e>
 732:	8b 01       	movw	r16, r22
 734:	ec 01       	movw	r28, r24
 736:	fb 01       	movw	r30, r22
 738:	00 84       	ldd	r0, Z+8	; 0x08
 73a:	f1 85       	ldd	r31, Z+9	; 0x09
 73c:	e0 2d       	mov	r30, r0
 73e:	09 95       	icall
 740:	89 2b       	or	r24, r25
 742:	e1 f6       	brne	.-72     	; 0x6fc <fputc+0x10>
 744:	d8 01       	movw	r26, r16
 746:	16 96       	adiw	r26, 0x06	; 6
 748:	8d 91       	ld	r24, X+
 74a:	9c 91       	ld	r25, X
 74c:	17 97       	sbiw	r26, 0x07	; 7
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	17 96       	adiw	r26, 0x07	; 7
 752:	9c 93       	st	X, r25
 754:	8e 93       	st	-X, r24
 756:	16 97       	sbiw	r26, 0x06	; 6
 758:	ce 01       	movw	r24, r28
 75a:	df 91       	pop	r29
 75c:	cf 91       	pop	r28
 75e:	1f 91       	pop	r17
 760:	0f 91       	pop	r16
 762:	08 95       	ret

00000764 <__ultoa_invert>:
 764:	fa 01       	movw	r30, r20
 766:	aa 27       	eor	r26, r26
 768:	28 30       	cpi	r18, 0x08	; 8
 76a:	51 f1       	breq	.+84     	; 0x7c0 <__ultoa_invert+0x5c>
 76c:	20 31       	cpi	r18, 0x10	; 16
 76e:	81 f1       	breq	.+96     	; 0x7d0 <__ultoa_invert+0x6c>
 770:	e8 94       	clt
 772:	6f 93       	push	r22
 774:	6e 7f       	andi	r22, 0xFE	; 254
 776:	6e 5f       	subi	r22, 0xFE	; 254
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	af 4f       	sbci	r26, 0xFF	; 255
 780:	b1 e0       	ldi	r27, 0x01	; 1
 782:	3e d0       	rcall	.+124    	; 0x800 <__DATA_REGION_LENGTH__>
 784:	b4 e0       	ldi	r27, 0x04	; 4
 786:	3c d0       	rcall	.+120    	; 0x800 <__DATA_REGION_LENGTH__>
 788:	67 0f       	add	r22, r23
 78a:	78 1f       	adc	r23, r24
 78c:	89 1f       	adc	r24, r25
 78e:	9a 1f       	adc	r25, r26
 790:	a1 1d       	adc	r26, r1
 792:	68 0f       	add	r22, r24
 794:	79 1f       	adc	r23, r25
 796:	8a 1f       	adc	r24, r26
 798:	91 1d       	adc	r25, r1
 79a:	a1 1d       	adc	r26, r1
 79c:	6a 0f       	add	r22, r26
 79e:	71 1d       	adc	r23, r1
 7a0:	81 1d       	adc	r24, r1
 7a2:	91 1d       	adc	r25, r1
 7a4:	a1 1d       	adc	r26, r1
 7a6:	20 d0       	rcall	.+64     	; 0x7e8 <__ultoa_invert+0x84>
 7a8:	09 f4       	brne	.+2      	; 0x7ac <__ultoa_invert+0x48>
 7aa:	68 94       	set
 7ac:	3f 91       	pop	r19
 7ae:	2a e0       	ldi	r18, 0x0A	; 10
 7b0:	26 9f       	mul	r18, r22
 7b2:	11 24       	eor	r1, r1
 7b4:	30 19       	sub	r19, r0
 7b6:	30 5d       	subi	r19, 0xD0	; 208
 7b8:	31 93       	st	Z+, r19
 7ba:	de f6       	brtc	.-74     	; 0x772 <__ultoa_invert+0xe>
 7bc:	cf 01       	movw	r24, r30
 7be:	08 95       	ret
 7c0:	46 2f       	mov	r20, r22
 7c2:	47 70       	andi	r20, 0x07	; 7
 7c4:	40 5d       	subi	r20, 0xD0	; 208
 7c6:	41 93       	st	Z+, r20
 7c8:	b3 e0       	ldi	r27, 0x03	; 3
 7ca:	0f d0       	rcall	.+30     	; 0x7ea <__ultoa_invert+0x86>
 7cc:	c9 f7       	brne	.-14     	; 0x7c0 <__ultoa_invert+0x5c>
 7ce:	f6 cf       	rjmp	.-20     	; 0x7bc <__ultoa_invert+0x58>
 7d0:	46 2f       	mov	r20, r22
 7d2:	4f 70       	andi	r20, 0x0F	; 15
 7d4:	40 5d       	subi	r20, 0xD0	; 208
 7d6:	4a 33       	cpi	r20, 0x3A	; 58
 7d8:	18 f0       	brcs	.+6      	; 0x7e0 <__ultoa_invert+0x7c>
 7da:	49 5d       	subi	r20, 0xD9	; 217
 7dc:	31 fd       	sbrc	r19, 1
 7de:	40 52       	subi	r20, 0x20	; 32
 7e0:	41 93       	st	Z+, r20
 7e2:	02 d0       	rcall	.+4      	; 0x7e8 <__ultoa_invert+0x84>
 7e4:	a9 f7       	brne	.-22     	; 0x7d0 <__ultoa_invert+0x6c>
 7e6:	ea cf       	rjmp	.-44     	; 0x7bc <__ultoa_invert+0x58>
 7e8:	b4 e0       	ldi	r27, 0x04	; 4
 7ea:	a6 95       	lsr	r26
 7ec:	97 95       	ror	r25
 7ee:	87 95       	ror	r24
 7f0:	77 95       	ror	r23
 7f2:	67 95       	ror	r22
 7f4:	ba 95       	dec	r27
 7f6:	c9 f7       	brne	.-14     	; 0x7ea <__ultoa_invert+0x86>
 7f8:	00 97       	sbiw	r24, 0x00	; 0
 7fa:	61 05       	cpc	r22, r1
 7fc:	71 05       	cpc	r23, r1
 7fe:	08 95       	ret
 800:	9b 01       	movw	r18, r22
 802:	ac 01       	movw	r20, r24
 804:	0a 2e       	mov	r0, r26
 806:	06 94       	lsr	r0
 808:	57 95       	ror	r21
 80a:	47 95       	ror	r20
 80c:	37 95       	ror	r19
 80e:	27 95       	ror	r18
 810:	ba 95       	dec	r27
 812:	c9 f7       	brne	.-14     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 814:	62 0f       	add	r22, r18
 816:	73 1f       	adc	r23, r19
 818:	84 1f       	adc	r24, r20
 81a:	95 1f       	adc	r25, r21
 81c:	a0 1d       	adc	r26, r0
 81e:	08 95       	ret

00000820 <__prologue_saves__>:
 820:	2f 92       	push	r2
 822:	3f 92       	push	r3
 824:	4f 92       	push	r4
 826:	5f 92       	push	r5
 828:	6f 92       	push	r6
 82a:	7f 92       	push	r7
 82c:	8f 92       	push	r8
 82e:	9f 92       	push	r9
 830:	af 92       	push	r10
 832:	bf 92       	push	r11
 834:	cf 92       	push	r12
 836:	df 92       	push	r13
 838:	ef 92       	push	r14
 83a:	ff 92       	push	r15
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	cd b7       	in	r28, 0x3d	; 61
 846:	de b7       	in	r29, 0x3e	; 62
 848:	ca 1b       	sub	r28, r26
 84a:	db 0b       	sbc	r29, r27
 84c:	0f b6       	in	r0, 0x3f	; 63
 84e:	f8 94       	cli
 850:	de bf       	out	0x3e, r29	; 62
 852:	0f be       	out	0x3f, r0	; 63
 854:	cd bf       	out	0x3d, r28	; 61
 856:	09 94       	ijmp

00000858 <__epilogue_restores__>:
 858:	2a 88       	ldd	r2, Y+18	; 0x12
 85a:	39 88       	ldd	r3, Y+17	; 0x11
 85c:	48 88       	ldd	r4, Y+16	; 0x10
 85e:	5f 84       	ldd	r5, Y+15	; 0x0f
 860:	6e 84       	ldd	r6, Y+14	; 0x0e
 862:	7d 84       	ldd	r7, Y+13	; 0x0d
 864:	8c 84       	ldd	r8, Y+12	; 0x0c
 866:	9b 84       	ldd	r9, Y+11	; 0x0b
 868:	aa 84       	ldd	r10, Y+10	; 0x0a
 86a:	b9 84       	ldd	r11, Y+9	; 0x09
 86c:	c8 84       	ldd	r12, Y+8	; 0x08
 86e:	df 80       	ldd	r13, Y+7	; 0x07
 870:	ee 80       	ldd	r14, Y+6	; 0x06
 872:	fd 80       	ldd	r15, Y+5	; 0x05
 874:	0c 81       	ldd	r16, Y+4	; 0x04
 876:	1b 81       	ldd	r17, Y+3	; 0x03
 878:	aa 81       	ldd	r26, Y+2	; 0x02
 87a:	b9 81       	ldd	r27, Y+1	; 0x01
 87c:	ce 0f       	add	r28, r30
 87e:	d1 1d       	adc	r29, r1
 880:	0f b6       	in	r0, 0x3f	; 63
 882:	f8 94       	cli
 884:	de bf       	out	0x3e, r29	; 62
 886:	0f be       	out	0x3f, r0	; 63
 888:	cd bf       	out	0x3d, r28	; 61
 88a:	ed 01       	movw	r28, r26
 88c:	08 95       	ret

0000088e <_exit>:
 88e:	f8 94       	cli

00000890 <__stop_program>:
 890:	ff cf       	rjmp	.-2      	; 0x890 <__stop_program>
